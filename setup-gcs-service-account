# vi: ft=bash

set -euo pipefail

PROJECT_ID=$( gcloud config list --format json | jq -r .core.project )

create_service_account () {

        ACCOUNT_NAME=$1
        ROLES=$2
        DESC=$3

        echo "- creating service account ${ACCOUNT_NAME}"

        gcloud iam service-accounts create ${ACCOUNT_NAME} \
                --description "${DESC}" \
                --display-name ${ACCOUNT_NAME}

        echo -n "- fetching service account email for ${ACCOUNT_NAME} "

        # might take a few seconds for the acount to show in 'list'
        ACCOUNT_EMAIL=""
        while [[ -z "${ACCOUNT_EMAIL}" ]]
        do
                for s in {1..3} ; do
                        sleep 1
                        echo -n "."
                done
                ACCOUNT_EMAIL=$( gcloud iam service-accounts list --format=json | jq -r '.[]|select(.displayName=="'${ACCOUNT_NAME}'").email' )
        done
        echo " got ${ACCOUNT_EMAIL}"


        echo "- adding roles to account ${ACCOUNT_NAME}"
        for ROLE in ${ROLES}
        do
                echo "adding role ${ROLE}"
                gcloud projects add-iam-policy-binding ${PROJECT_ID} \
                        --member serviceAccount:${ACCOUNT_EMAIL} \
                        --role roles/${ROLE}
        done

        echo "creating service account credentials key file for ${ACCOUNT_EMAIL}"
        gcloud iam service-accounts keys create ${PROJECT_ID}-${ACCOUNT_NAME}-service-account-key.json \
                --iam-account ${ACCOUNT_EMAIL}

        echo "stored service account credentials key file in ${PROJECT_ID}-${ACCOUNT_NAME}-service-account-key.json"

}

# storage-reader service account for UW rclone client
create_service_account \
        uw-rclone \
        "storage.objectViewer" \
        "rclone client reads assets from GCS"
